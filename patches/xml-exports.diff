diff --git a/src/xrGame/ScriptXMLInit.cpp b/src/xrGame/ScriptXMLInit.cpp
index 27307bb..3c89e6d 100644
--- a/src/xrGame/ScriptXMLInit.cpp
+++ b/src/xrGame/ScriptXMLInit.cpp
@@ -42,6 +42,78 @@ void CScriptXmlInit::ParseFile(LPCSTR xml_file)
 	m_xml.Load(CONFIG_PATH, UI_PATH, xml_file);
 }
 
+//------------------------------------------------------------
+// Tronex: useful exports to read XML files
+//------------------------------------------------------------
+void CScriptXmlInit::ParseDirFile(LPCSTR xml_dir, LPCSTR xml_file)
+{
+	m_xml.Load(CONFIG_PATH, xml_dir, xml_file);
+}
+
+bool CScriptXmlInit::NodeExist(LPCSTR path, int index)
+{
+	if (m_xml.NavigateToNode(path, index))
+	{
+		return true;
+	}
+	return false;
+}
+
+int CScriptXmlInit::GetNodesNum(LPCSTR path, int index, LPCSTR tag_name)
+{
+	return m_xml.GetNodesNum(path, index, tag_name);
+}
+
+bool CScriptXmlInit::NavigateToNode(LPCSTR path, int index)
+{
+	XML_NODE* node = m_xml.NavigateToNode(path, index);
+	if (node)
+	{
+		m_xml.SetLocalRoot(node);
+		return true;
+	}
+	return false;
+}
+
+bool CScriptXmlInit::NavigateToNode_ByAttribute(LPCSTR tag_name, LPCSTR attrib_name, LPCSTR attrib_value)
+{
+	XML_NODE* node = m_xml.NavigateToNodeWithAttribute(tag_name, attrib_name, attrib_value);
+	if (node)
+	{
+		m_xml.SetLocalRoot(node);
+		return true;
+	}
+	return false;
+}
+
+bool CScriptXmlInit::NavigateToNode_ByPath(LPCSTR path, int index, LPCSTR tag_name, LPCSTR attrib, LPCSTR attrib_value_pattern)
+{
+	XML_NODE* node = m_xml.SearchForAttribute(path, index, tag_name, attrib, attrib_value_pattern);
+	if (node)
+	{
+		m_xml.SetLocalRoot(node);
+		return true;
+	}
+	return false;
+}
+
+void CScriptXmlInit::NavigateToRoot()
+{
+	m_xml.SetLocalRoot(m_xml.GetRoot());
+}
+
+LPCSTR CScriptXmlInit::ReadValue(LPCSTR path, int index)
+{
+	return m_xml.Read(path, index, "");
+}
+
+LPCSTR CScriptXmlInit::ReadAttribute(LPCSTR path, int index, LPCSTR attrib)
+{
+	return m_xml.ReadAttrib(path, index, attrib, "");
+}
+
+//------------------------------------------------------------
+
 void CScriptXmlInit::InitWindow(LPCSTR path, int index, CUIWindow* pWnd)
 {
 	CUIXmlInit::InitWindow(m_xml, path, index, pWnd);
@@ -61,7 +133,6 @@ CUIFrameWindow* CScriptXmlInit::InitFrame(LPCSTR path, CUIWindow* parent)
 	return pWnd;
 }
 
-
 CUIFrameLineWnd* CScriptXmlInit::InitFrameLine(LPCSTR path, CUIWindow* parent)
 {
 	CUIFrameLineWnd* pWnd = xr_new<CUIFrameLineWnd>();
@@ -70,7 +141,6 @@ CUIFrameLineWnd* CScriptXmlInit::InitFrameLine(LPCSTR path, CUIWindow* parent)
 	return pWnd;
 }
 
-
 CUIEditBox* CScriptXmlInit::InitEditBox(LPCSTR path, CUIWindow* parent)
 {
 	CUIEditBox* pWnd = xr_new<CUIEditBox>();
@@ -267,6 +337,17 @@ void CScriptXmlInit::script_register(lua_State* L)
 		class_<CScriptXmlInit>("CScriptXmlInit")
 		.def(constructor<>())
 		.def("ParseFile", &CScriptXmlInit::ParseFile)
+		.def("ParseDirFile", &CScriptXmlInit::ParseDirFile)
+		
+		.def("NodeExist", &CScriptXmlInit::NodeExist)
+		.def("GetNodesNum", &CScriptXmlInit::GetNodesNum)
+		.def("NavigateToNode", &CScriptXmlInit::NavigateToNode)
+		.def("NavigateToNode_ByAttribute", &CScriptXmlInit::NavigateToNode_ByAttribute)
+		.def("NavigateToNode_ByPath", &CScriptXmlInit::NavigateToNode_ByPath)
+		.def("NavigateToRoot", &CScriptXmlInit::NavigateToRoot)
+		.def("ReadValue", &CScriptXmlInit::ReadValue)
+		.def("ReadAttribute", &CScriptXmlInit::ReadAttribute)
+		
 		.def("InitWindow", &CScriptXmlInit::InitWindow)
 		.def("InitHint", &CScriptXmlInit::InitHint)
 		.def("InitFrame", &CScriptXmlInit::InitFrame)
diff --git a/src/xrGame/ScriptXMLInit.h b/src/xrGame/ScriptXMLInit.h
index 2db64c0..6d3f484 100644
--- a/src/xrGame/ScriptXMLInit.h
+++ b/src/xrGame/ScriptXMLInit.h
@@ -35,6 +35,17 @@ class CScriptXmlInit
 {
 public:
 	void ParseFile(LPCSTR xml_file);
+	void ParseDirFile(LPCSTR xml_dir, LPCSTR xml_file);
+	
+	bool NodeExist(LPCSTR path, int index);
+	int GetNodesNum(LPCSTR path, int index, LPCSTR tag_name);
+	bool NavigateToNode(LPCSTR path, int index);
+	bool NavigateToNode_ByAttribute(LPCSTR tag_name, LPCSTR attrib_name, LPCSTR attrib_value);
+	bool NavigateToNode_ByPath(LPCSTR path, int index, LPCSTR tag_name, LPCSTR attrib, LPCSTR attrib_value_pattern);
+	void NavigateToRoot();
+	LPCSTR ReadValue(LPCSTR path, int index);
+	LPCSTR ReadAttribute(LPCSTR path, int index, LPCSTR attrib);
+	
 	void InitWindow(LPCSTR path, int index, CUIWindow* pWnd);
 	UIHint* InitHint(LPCSTR path, CUIWindow* parent);
 	CUIFrameWindow* InitFrame(LPCSTR path, CUIWindow* parent);
