diff --git a/src/xrGame/ui/UILines.cpp b/src/xrGame/ui/UILines.cpp
index d639789..44b48a1 100644
--- a/src/xrGame/ui/UILines.cpp
+++ b/src/xrGame/ui/UILines.cpp
@@ -7,6 +7,7 @@
 // Copyright 2005 GSC Game World
 
 #include "StdAfx.h"
+#include <cstdio>
 
 #include "UILines.h"
 #include "UIXmlInit.h"
@@ -158,7 +159,12 @@ void CUILines::ParseText(bool force)
 				{
 					bNewLines = TRUE;
 					*pszTemp = '\0';
-					ptmp_line->AddSubLine(pszSearch, tcolor);
+					CUISubLine subline;
+					subline.m_text = pszSearch;
+					subline.m_color = tcolor;
+					subline.m_last_in_line = true;
+					//ptmp_line->AddSubLine(pszSearch, tcolor);
+					ptmp_line->AddSubLine(&subline);
 					pszSearch = pszTemp + 2;
 				}
 				ptmp_line->AddSubLine(pszSearch, tcolor);
@@ -201,8 +207,9 @@ void CUILines::ParseText(bool force)
 		{
 			for (int i = 0; i < vsz; i++)
 			{
-				const char* pszText = line->m_subLines[i].m_text.c_str();
-				const u32 tcolor = line->m_subLines[i].m_color;
+				CUISubLine* pSubLine = &line->m_subLines[i];
+				const char* pszText = pSubLine->m_text.c_str();
+				const u32 tcolor = pSubLine->m_color;
 				u16 uFrom = 0, uPartLen = 0;
 				VERIFY(pszText);
 				u16 nMarkers = m_pFont->SplitByWidth(aMarkers, UBUFFER_SIZE, fTargetWidth, pszText);
@@ -222,8 +229,11 @@ void CUILines::ParseText(bool force)
 				}
 				strncpy_s(szTempLine, pszText + uFrom, MAX_MB_CHARS);
 				tmp_line.AddSubLine(szTempLine, tcolor);
-				m_lines.push_back(tmp_line);
-				tmp_line.Clear();
+				if (pSubLine->m_last_in_line || i == (vsz -1))
+				{
+					m_lines.push_back(tmp_line);
+					tmp_line.Clear();
+				}
 			}
 		}
 	}
